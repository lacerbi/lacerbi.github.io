<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://lacerbi.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://lacerbi.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-11-27T21:01:55+00:00</updated><id>https://lacerbi.github.io/feed.xml</id><title type="html">blank</title><subtitle>Luigi Acerbi&apos;s personal webpage. </subtitle><entry><title type="html">Vi Is Just Inference</title><link href="https://lacerbi.github.io/blog/2024/vi-is-just-inference/" rel="alternate" type="text/html" title="Vi Is Just Inference"/><published>2024-11-27T00:00:00+00:00</published><updated>2024-11-27T00:00:00+00:00</updated><id>https://lacerbi.github.io/blog/2024/vi-is-just-inference</id><content type="html" xml:base="https://lacerbi.github.io/blog/2024/vi-is-just-inference/"><![CDATA[<p>Choi, Y., Vergari, A., &amp; Van den Broeck, G. (2020). Probabilistic circuits: A unifying framework for tractable probabilistic models. <i>UCLA. URL: Http://Starai. Cs. Ucla. Edu/Papers/ProbCirc20. Pdf</i>, 6.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Choi, Y., Vergari, A., &amp; Van den Broeck, G. (2020). Probabilistic circuits: A unifying framework for tractable probabilistic models. UCLA. URL: Http://Starai. Cs. Ucla. Edu/Papers/ProbCirc20. Pdf, 6.]]></summary></entry><entry><title type="html">Variational inference is just Bayesian inference</title><link href="https://lacerbi.github.io/blog/2024/vi-is-just-inference/" rel="alternate" type="text/html" title="Variational inference is just Bayesian inference"/><published>2024-11-27T00:00:00+00:00</published><updated>2024-11-27T00:00:00+00:00</updated><id>https://lacerbi.github.io/blog/2024/vi-is-just-inference</id><content type="html" xml:base="https://lacerbi.github.io/blog/2024/vi-is-just-inference/"><![CDATA[<p>The goal of this post is to show you that variational inference is a very natural way of thinking about Bayesian inference and not some shady approximate method.<d-footnote>Unlike what the MCMC mafia wants you to think.</d-footnote> At the end, you will also be able to directly play around with variational inference via an interactive visualization. In fact, you can also just skip the article and go straight to play with the interactive thingie at the bottom, and then come back if you feel like it.</p> <h2 id="what-is-variational-inference">What is variational inference</h2> <p>Let’s start with the textbook definitions. We have a <em>target</em> distribution</p> \[p^\star(\theta) = \frac{\widetilde{p}(\theta)}{\mathcal{Z}},\] <p>which we know up to its normalization constant \(\mathcal{Z}\). At the core, variational inference is a way to approximate \(p^\star(\theta)\) having only the ability to evaluate the <em>unnormalized</em> target \(\widetilde{p}(\theta)\). The target can be continuous or discrete (or mixed), there are no restrictions!</p> <p>If we go on reading a textbook, it will tell us that variational inference “approximates” the target with a (simpler) distribution \(q_\psi(\theta)\) parameterized by \(\psi\).</p> <p>For example, if \(q\) is a multivariate normal, \(\psi\) could be the mean and covariance matrix of the distribution, \(\psi = (\mu, \Sigma)\). Please note that while normal distributions are a common choice in variational inference, they are not the only one – you could choose \(q\) to be <em>any</em> distribution of your choice!</p> <h3 id="why-do-we-need-to-approximate-the-target">Why do we need to approximate the target?</h3> <p>That is a great question. Why can’t we just use the target as is? <em>Because we can’t.</em></p> <p>Yes, we may be able to evaluate \(\widetilde{p}(\theta)\) for any chosen value of \(\theta\), but that alone does not tell us much.<d-footnote>Even knowing the normalization constant might not help that much.</d-footnote> What is the shape of this distribution? What are its moments? Its covariance structure? Does it have multiple modes? What is the expectation of an arbitrary function \(f(\theta)\) under the target? We may not know any of that!</p> <p><em>One way</em> to compute these values might be to get samples from the target… but how do we get those? How do we draw samples from the target if we only know an unnormalized \(\widetilde{p}(\theta)\)?<d-footnote>Yes, one answer is MCMC (Markov Chain Monte Carlo), as surely you know thanks to the MCMC mafia. Point is, there are other answers.</d-footnote></p> <p>In short, we have our largely-unusable target and we would like to replace it with something that is easy to use and compute with for all the quantities we care about. There is an imponderable word for that: we want a distribution which is <em>tractable</em>.</p> <h3 id="making-the-intractable-tractable">Making the intractable tractable</h3> <p>This is the magic of what variational inference does: it takes an intractable target distribution and it gives back a <em>tractable</em> approximation \(q\), belonging to a class of our choice. What tractable exactly means is up for discussion, but at the very least we expect these properties:</p> <ul> <li>\(q\) is normalized</li> <li>We can draw samples from \(q\)</li> <li>We can evaluate the density of \(q\) at any point</li> </ul> <p>There is potentially a whole variety of desiderata for a tractable distribution, and you are encouraged to read Choi et al. (2020)<d-cite key="choi2020probabilistic"></d-cite>.</p> <h2 id="variational-inference-on-a-general-target-density">Variational inference on a general target density</h2> <p>So, how does \(q\) approximate the target? Intuitively, we want \(q\) to be as similar as possible to the <em>normalized</em> target \(p^\star\).</p> <p>So we can take a measure of discrepancy between two distributions, and say that we want that discrepancy to be as small as possible. Traditionally, variational inference chooses the reverse <a href="https://en.wikipedia.org/wiki/Kullback%E2%80%93Leibler_divergence">Kullback-Leibler (KL) divergence</a> as its discrepancy function:<d-footnote>For concreteness, we write the following equations as integrals, but more generally they should be written as expectations (where the notation works for discrete, continuous, and mixed distributions).</d-footnote></p> \[\text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) = \int q_\psi(\theta) \log \frac{q_\psi(\theta)}{p^\star(\theta)} \, d\theta\] <p>This measures how the approximation \(q_\psi(\theta)\) diverges (differs) from the normalized target distribution \(p^\star(\theta)\). It is <em>reverse</em> because we put the approximation \(q\) first (the KL is not symmetric). The <em>direct</em> KL divergence would have the “real” target distribution \(p^\star\) first.</p> <p>So for a given family of approximating distributions \(q_\psi(\theta)\), variational inference chooses the best value of the parameters \(\psi\) that make \(q_\psi\) “as close as possible” to \(p^\star\) by minimizing the KL divergence between \(q_\psi\) and \(p^\star\).</p> <p>Done? Not quite yet.</p> <h2 id="the-evidence-lower-bound-elbo">The Evidence Lower BOund (ELBO)</h2> <p>There is a caveat to the logic above: remember that we only have the unnormalized \(\widetilde{p}\), we do not have \(p^\star\)! However, it turns out that this is no problem at all. First, we present the main results, and we will provide a full derivation after.</p> <p>Minimizing the KL divergence between \(q_\psi\) and \(p^\star\) can be achieved by maximizing the so-called ELBO, or Evidence Lower BOund, defined as:</p> \[\text{ELBO}(q_\psi) = \underbrace{\int q_\psi(\theta) \log \widetilde{p}(\theta) \, d\theta}_{\text{Cross-entropy}} \underbrace{- \int q_\psi(\theta) \log q_\psi(\theta) \, d\theta}_{\text{Entropy}}.\] <p>First, note that the ELBO only depends on \(q_\psi\) and \(\widetilde{p}\). The ELBO is indeed a lower bound to the log normalization constant, that is \(\log \mathcal{Z} \ge \text{ELBO}(\psi)\). It is composed of two terms, a cross-entropy term between \(q\) and \(\widetilde{p}\) and the <strong>entropy</strong> of \(q\). The two terms represent opposing forces:</p> <ul> <li>The cross-entropy term ensures that \(q\) avoids regions where \(p\) is low, shrinking towards high-density regions (mode-seeking behavior).</li> <li>The entropy term ensures that \(q\) is as spread-out as possible.</li> </ul> <p>In conclusion, in variational inference we want to tweak the parameters \(\psi\) of \(q\) such that that the approximation \(q_\psi\) is as close as possible to \(p^\star\), according to the ELBO and, equivalently, to the KL divergence.</p> <details><summary>Full derivation of the ELBO</summary> <h2 id="this-is-the-full-derivation-of-the-elbo-courtesy-of-o1-mini-and-gpt-4o-and-a-bit-of-editing">This is the full derivation of the ELBO, courtesy of <code class="language-plaintext highlighter-rouge">o1-mini</code> and <code class="language-plaintext highlighter-rouge">gpt-4o</code> and a bit of editing.</h2> <h3 id="step-1-define-the-kl-divergence"><strong>Step 1: Define the KL divergence</strong></h3> <p>The reverse Kullback-Leibler (KL) divergence between \(q_\psi(\theta)\) and the normalized target \(p^\star(\theta)\) is:</p> \[\text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) = \int q_\psi(\theta) \log \frac{q_\psi(\theta)}{p^\star(\theta)} \, d\theta\] <hr/> <h3 id="step-2-express-pstartheta-in-terms-of-widetildeptheta"><strong>Step 2: Express \(p^\star(\theta)\) in terms of \(\widetilde{p}(\theta)\)</strong></h3> <p>The normalized target \(p^\star(\theta)\) is related to the unnormalized target \(\widetilde{p}(\theta)\) through the normalization constant \(\mathcal{Z}\):</p> \[p^\star(\theta) = \frac{\widetilde{p}(\theta)}{\mathcal{Z}}, \quad \text{where} \quad \mathcal{Z} = \int \widetilde{p}(\theta) \, d\theta.\] <p>Substitute this expression for \(p^\star(\theta)\) into the KL divergence:</p> \[\text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) = \int q_\psi(\theta) \log \frac{q_\psi(\theta)}{\frac{\widetilde{p}(\theta)}{\mathcal{Z}}} \, d\theta\] <hr/> <h3 id="step-3-simplify-the-log-term"><strong>Step 3: Simplify the log term</strong></h3> <p>Simplify the fraction inside the logarithm:</p> \[\frac{q_\psi(\theta)}{\frac{\widetilde{p}(\theta)}{\mathcal{Z}}} = q_\psi(\theta) \cdot \frac{\mathcal{Z}}{\widetilde{p}(\theta)}\] <p>The KL divergence becomes:</p> \[\text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) = \int q_\psi(\theta) \log \left( q_\psi(\theta) \cdot \frac{\mathcal{Z}}{\widetilde{p}(\theta)} \right) \, d\theta\] <hr/> <h3 id="step-4-split-the-logarithm"><strong>Step 4: Split the logarithm</strong></h3> <p>Using the property of logarithms \(\log(ab) = \log(a) + \log(b)\), split the term inside the integral:</p> \[\text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) = \int q_\psi(\theta) \big( \log q_\psi(\theta) + \log \mathcal{Z} - \log \widetilde{p}(\theta) \big) \, d\theta\] <hr/> <h3 id="step-5-separate-the-terms"><strong>Step 5: Separate the terms</strong></h3> <p>Distribute \(q_\psi(\theta)\) over the sum:</p> \[\text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) = \int q_\psi(\theta) \log q_\psi(\theta) \, d\theta + \int q_\psi(\theta) \log \mathcal{Z} \, d\theta - \int q_\psi(\theta) \log \widetilde{p}(\theta) \, d\theta\] <hr/> <h3 id="step-6-simplify-the-second-term"><strong>Step 6: Simplify the second term</strong></h3> <p>Since \(\mathcal{Z}\) is a constant, \(\log \mathcal{Z}\) is also constant and can be factored out of the integral:</p> \[\int q_\psi(\theta) \log \mathcal{Z} \, d\theta = \log \mathcal{Z} \int q_\psi(\theta) \, d\theta\] <p>Because \(q_\psi(\theta)\) is a valid probability distribution, \(\int q_\psi(\theta) \, d\theta = 1\). Therefore:</p> \[\int q_\psi(\theta) \log \mathcal{Z} \, d\theta = \log \mathcal{Z}\] <hr/> <h3 id="step-7-substitute-back"><strong>Step 7: Substitute back</strong></h3> <p>Substitute this simplification back into the KL divergence:</p> \[\text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) = \int q_\psi(\theta) \log q_\psi(\theta) \, d\theta + \log \mathcal{Z} - \int q_\psi(\theta) \log \widetilde{p}(\theta) \, d\theta\] <hr/> <h3 id="step-8-rearrange-terms"><strong>Step 8: Rearrange terms</strong></h3> <p>Rearrange the equation to isolate \(\log \mathcal{Z}\):</p> \[\log \mathcal{Z} = \text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) - \int q_\psi(\theta) \log q_\psi(\theta) \, d\theta + \int q_\psi(\theta) \log \widetilde{p}(\theta) \, d\theta\] <p>Group terms related to \(q_\psi(\theta)\):</p> \[\log \mathcal{Z} = \text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) + \left( \int q_\psi(\theta) \log \widetilde{p}(\theta) \, d\theta - \int q_\psi(\theta) \log q_\psi(\theta) \, d\theta \right)\] <hr/> <h3 id="step-9-define-the-elbo"><strong>Step 9: Define the ELBO</strong></h3> <p>The ELBO is defined as:</p> \[\text{ELBO}(q_\psi) = \int q_\psi(\theta) \log \widetilde{p}(\theta) \, d\theta - \int q_\psi(\theta) \log q_\psi(\theta) \, d\theta\] <p>Substitute this into the equation for \(\log \mathcal{Z}\):</p> \[\log \mathcal{Z} = \text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) + \text{ELBO}(q_\psi)\] <hr/> <h3 id="step-10-rearrange-for-the-elbo"><strong>Step 10: Rearrange for the ELBO</strong></h3> <p>Rearranging to isolate \(\text{ELBO}(q_\psi)\):</p> \[\text{ELBO}(q_\psi) = \log \mathcal{Z} - \text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta))\] <hr/> <h3 id="step-11-interpretation"><strong>Step 11: Interpretation</strong></h3> <ul> <li>\(\log \mathcal{Z}\) is a constant with respect to \(q_\psi(\theta)\).</li> <li>To minimize \(\text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta))\), we maximize \(\text{ELBO}(q_\psi)\).</li> </ul> <p>Thus, <strong>minimizing the KL divergence is equivalent to maximizing the ELBO</strong>.</p> <hr/> <h3 id="final-relation"><strong>Final Relation</strong></h3> <p>\(\text{KL}(q_\psi(\theta) \,\mid\mid\, p^\star(\theta)) = \log \mathcal{Z} - \text{ELBO}(q_\psi)\)</p> </details> <h2 id="variational-inference-to-approximate-a-target-posterior">Variational inference to approximate a target posterior</h2> <p>While variational inference can be performed for any generic target density \(\widetilde{p}(\theta)\), the common scenario is that our target density is an unnormalized <em>posterior distribution</em>:</p> \[\widetilde{p}(\theta) = p(\mathcal{D} \mid \theta) p(\theta) \propto \frac{p(\mathcal{D} \mid \theta) p(\theta)}{p(\mathcal{D})}\] <p>where \(p(\mathcal{D} \mid \theta)\) is the <em>likelihood</em>, \(p(\theta)\) is the <em>prior</em>, and \(p(\mathcal{D} \mid \theta) p(\theta) = p(\mathcal{D}, \theta)\) is the joint distribution. The (unknown) normalization constant here is $\mathcal{Z} \equiv p(\mathcal{D})$, also called the <em>model evidence</em> or <em>marginal likelihood</em>. In this typical usage-case scenario for variational inference, the ELBO reads:</p> \[\text{ELBO}(q_\psi) = \mathbb{E}_{q_\psi(\theta)}\left[ \log p(\mathcal{D} \mid \theta) p(\theta) \right] - \mathbb{E}_{q_\psi(\theta)}\left[\log q_\psi(\theta)\right]\] <p>where we simply replaced \(\widetilde{p}\) with the unnormalized posterior.</p> <h2 id="things-to-know">Things to know</h2> <ul> <li>The term \(\mathbb{E}_{q_\psi(\theta)}\left[ \log p(\theta \mid \mathcal{D}) p(\theta) \right]\) in the ELBO is the expected log joint.</li> <li>The term \(-\mathbb{E}_{q_\psi(\theta)}\left[ \log q_\psi(\theta) \right]\) is the <em>entropy</em> of $q_{\psi}(\theta)$, often written as $\mathcal{H}[q]$.</li> <li>Note that the ELBO is a function of \(\psi\). The optimization finds the \(\psi^*\) that maximizes the ELBO (in practice, the value \(\psi^*\) that minimizes the negative ELBO).</li> <li>The ELBO is a lower bound to the log normalization constant of the target density, that is \(\log p(\mathcal{D})\) when the target is the unnormalized posterior.</li> <li>For notational convenience, the dependence of \(q_\psi(\theta)\) on \(\psi\) is often omitted. Also $$ \psi$ $ is an arbitrary notation, you will find other (Greek) letters to denote the variational parameters.</li> </ul> <iframe src="https://lacerbi.github.io/interactive-vi-demo/" width="100%" height="700px" style="border: none;" title="Interactive Variational Inference Demo"> </iframe>]]></content><author><name>Luigi Acerbi</name></author><category term="variational-inference"/><summary type="html"><![CDATA[an interactive tutorial on variational inference]]></summary></entry><entry><title type="html">Hello world</title><link href="https://lacerbi.github.io/blog/2024/hello-world/" rel="alternate" type="text/html" title="Hello world"/><published>2024-11-21T10:32:13+00:00</published><updated>2024-11-21T10:32:13+00:00</updated><id>https://lacerbi.github.io/blog/2024/hello-world</id><content type="html" xml:base="https://lacerbi.github.io/blog/2024/hello-world/"><![CDATA[<h2 id="hello-world">Hello World</h2> <p>Very creative, congratulations. This is just a test of the new theme. Bye.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="hellos"/><category term="worlds"/><summary type="html"><![CDATA[Just a test post. Maybe one day there will be real posts, but never trust an academic's promise.]]></summary></entry></feed>